// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace messages
{

using global::System;
using global::FlatBuffers;

public struct OutputId : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_11_1(); }
  public static OutputId GetRootAsOutputId(ByteBuffer _bb) { return GetRootAsOutputId(_bb, new OutputId()); }
  public static OutputId GetRootAsOutputId(ByteBuffer _bb, OutputId obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public OutputId __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public messages.OutputKind Kind { get { int o = __p.__offset(4); return o != 0 ? (messages.OutputKind)__p.bb.GetShort(o + __p.bb_pos) : messages.OutputKind.Started; } }
  public uint Id { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }

  public static Offset<messages.OutputId> CreateOutputId(FlatBufferBuilder builder,
      messages.OutputKind kind = messages.OutputKind.Started,
      uint id = 0) {
    builder.StartTable(2);
    OutputId.AddId(builder, id);
    OutputId.AddKind(builder, kind);
    return OutputId.EndOutputId(builder);
  }

  public static void StartOutputId(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddKind(FlatBufferBuilder builder, messages.OutputKind kind) { builder.AddShort(0, (short)kind, 0); }
  public static void AddId(FlatBufferBuilder builder, uint id) { builder.AddUint(1, id, 0); }
  public static Offset<messages.OutputId> EndOutputId(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<messages.OutputId>(o);
  }
};


}
