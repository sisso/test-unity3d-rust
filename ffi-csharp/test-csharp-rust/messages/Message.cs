// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace messages
{

using global::System;
using global::FlatBuffers;

public struct Message : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_11_1(); }
  public static Message GetRootAsMessage(ByteBuffer _bb) { return GetRootAsMessage(_bb, new Message()); }
  public static Message GetRootAsMessage(ByteBuffer _bb, Message obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Message __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public messages.Inputs? Input { get { int o = __p.__offset(4); return o != 0 ? (messages.Inputs?)(new messages.Inputs()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }
  public messages.Outputs? Output { get { int o = __p.__offset(6); return o != 0 ? (messages.Outputs?)(new messages.Outputs()).__assign(__p.__indirect(o + __p.bb_pos), __p.bb) : null; } }

  public static Offset<messages.Message> CreateMessage(FlatBufferBuilder builder,
      Offset<messages.Inputs> inputOffset = default(Offset<messages.Inputs>),
      Offset<messages.Outputs> outputOffset = default(Offset<messages.Outputs>)) {
    builder.StartTable(2);
    Message.AddOutput(builder, outputOffset);
    Message.AddInput(builder, inputOffset);
    return Message.EndMessage(builder);
  }

  public static void StartMessage(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddInput(FlatBufferBuilder builder, Offset<messages.Inputs> inputOffset) { builder.AddOffset(0, inputOffset.Value, 0); }
  public static void AddOutput(FlatBufferBuilder builder, Offset<messages.Outputs> outputOffset) { builder.AddOffset(1, outputOffset.Value, 0); }
  public static Offset<messages.Message> EndMessage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<messages.Message>(o);
  }
  public static void FinishMessageBuffer(FlatBufferBuilder builder, Offset<messages.Message> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedMessageBuffer(FlatBufferBuilder builder, Offset<messages.Message> offset) { builder.FinishSizePrefixed(offset.Value); }
};


}
