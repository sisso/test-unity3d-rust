namespace FfiResponses;

enum ResponseKind : ushort {
    // A new game has started
    GameStarted = 0,
    // Game is idle, a StartGameRequest is required
    GameStatusIdle,
    // Game is running
    GameStatusRunning,
    // Return a full state, all game state before this message should be discarded
    FullStateResponse,
    // Create a object
	CreateObj,
	// Move object to the position
	MoveObj,
}

enum PrefabKind : ushort {
    Player,
    Monster
}

struct EmptyPackage {
    kind: ResponseKind;
    ordering: uint;
}

struct IdPackage {
    kind: ResponseKind;
    ordering: uint;
    id: uint32;
}

struct CreatePackage {
    kind: ResponseKind;
    ordering: uint;
    id: uint32;
    prefab: PrefabKind;
    x: float32;
    y: float32;
}

struct PosPackage {
    kind: ResponseKind;
    ordering: uint;
    id: uint32;
    x: float32;
    y: float32;
}

struct V2Package {
    kind: ResponseKind;
    ordering: uint;
    x: float32;
    y: float32;
}

table StringPackage {
    kind: ResponseKind;
    ordering: uint;
    buffer: string;
}

table BytesPackage {
    kind: ResponseKind;
    ordering: uint;
    buffer: [byte];
}

table Responses {
    total_messages: uint;
    empty_packages: [EmptyPackage];
    create_packages: [CreatePackage];
    pos_packages: [PosPackage];
}
