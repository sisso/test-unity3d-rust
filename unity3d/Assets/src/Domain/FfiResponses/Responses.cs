// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace FfiResponses
{

using global::System;
using global::FlatBuffers;

public struct Responses : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_11_1(); }
  public static Responses GetRootAsResponses(ByteBuffer _bb) { return GetRootAsResponses(_bb, new Responses()); }
  public static Responses GetRootAsResponses(ByteBuffer _bb, Responses obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Responses __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public FfiResponses.EmptyPackage? Simple(int j) { int o = __p.__offset(4); return o != 0 ? (FfiResponses.EmptyPackage?)(new FfiResponses.EmptyPackage()).__assign(__p.__vector(o) + j * 2, __p.bb) : null; }
  public int SimpleLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public FfiResponses.CreatePackage? CreateObject(int j) { int o = __p.__offset(6); return o != 0 ? (FfiResponses.CreatePackage?)(new FfiResponses.CreatePackage()).__assign(__p.__vector(o) + j * 16, __p.bb) : null; }
  public int CreateObjectLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }
  public FfiResponses.PosPackage? MoveObj(int j) { int o = __p.__offset(8); return o != 0 ? (FfiResponses.PosPackage?)(new FfiResponses.PosPackage()).__assign(__p.__vector(o) + j * 12, __p.bb) : null; }
  public int MoveObjLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<FfiResponses.Responses> CreateResponses(FlatBufferBuilder builder,
      VectorOffset simpleOffset = default(VectorOffset),
      VectorOffset create_objectOffset = default(VectorOffset),
      VectorOffset move_objOffset = default(VectorOffset)) {
    builder.StartTable(3);
    Responses.AddMoveObj(builder, move_objOffset);
    Responses.AddCreateObject(builder, create_objectOffset);
    Responses.AddSimple(builder, simpleOffset);
    return Responses.EndResponses(builder);
  }

  public static void StartResponses(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddSimple(FlatBufferBuilder builder, VectorOffset simpleOffset) { builder.AddOffset(0, simpleOffset.Value, 0); }
  public static void StartSimpleVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(2, numElems, 2); }
  public static void AddCreateObject(FlatBufferBuilder builder, VectorOffset createObjectOffset) { builder.AddOffset(1, createObjectOffset.Value, 0); }
  public static void StartCreateObjectVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(16, numElems, 4); }
  public static void AddMoveObj(FlatBufferBuilder builder, VectorOffset moveObjOffset) { builder.AddOffset(2, moveObjOffset.Value, 0); }
  public static void StartMoveObjVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(12, numElems, 4); }
  public static Offset<FfiResponses.Responses> EndResponses(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<FfiResponses.Responses>(o);
  }
};


}
