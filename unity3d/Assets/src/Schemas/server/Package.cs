// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace server
{

using global::System;
using global::FlatBuffers;

public struct Package : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_11_1(); }
  public static Package GetRootAsPackage(ByteBuffer _bb) { return GetRootAsPackage(_bb, new Package()); }
  public static Package GetRootAsPackage(ByteBuffer _bb, Package obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Package __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public server.PackageKind Kind { get { int o = __p.__offset(4); return o != 0 ? (server.PackageKind)__p.bb.GetUshort(o + __p.bb_pos) : server.PackageKind.RequestLogin; } }
  public string Json { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetJsonBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetJsonBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetJsonArray() { return __p.__vector_as_array<byte>(6); }

  public static Offset<server.Package> CreatePackage(FlatBufferBuilder builder,
      server.PackageKind kind = server.PackageKind.RequestLogin,
      StringOffset jsonOffset = default(StringOffset)) {
    builder.StartTable(2);
    Package.AddJson(builder, jsonOffset);
    Package.AddKind(builder, kind);
    return Package.EndPackage(builder);
  }

  public static void StartPackage(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddKind(FlatBufferBuilder builder, server.PackageKind kind) { builder.AddUshort(0, (ushort)kind, 0); }
  public static void AddJson(FlatBufferBuilder builder, StringOffset jsonOffset) { builder.AddOffset(1, jsonOffset.Value, 0); }
  public static Offset<server.Package> EndPackage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<server.Package>(o);
  }
  public static void FinishPackageBuffer(FlatBufferBuilder builder, Offset<server.Package> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedPackageBuffer(FlatBufferBuilder builder, Offset<server.Package> offset) { builder.FinishSizePrefixed(offset.Value); }
};


}
