// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using global::System;
using global::FlatBuffers;

public struct SimplePackage : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_11_1(); }
  public static SimplePackage GetRootAsSimplePackage(ByteBuffer _bb) { return GetRootAsSimplePackage(_bb, new SimplePackage()); }
  public static SimplePackage GetRootAsSimplePackage(ByteBuffer _bb, SimplePackage obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public SimplePackage __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public MessageKind Kind { get { int o = __p.__offset(4); return o != 0 ? (MessageKind)__p.bb.GetUshort(o + __p.bb_pos) : MessageKind.StartGame; } }
  public uint Id { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetUint(o + __p.bb_pos) : (uint)0; } }
  public float X { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }
  public float Y { get { int o = __p.__offset(10); return o != 0 ? __p.bb.GetFloat(o + __p.bb_pos) : (float)0.0f; } }

  public static Offset<SimplePackage> CreateSimplePackage(FlatBufferBuilder builder,
      MessageKind kind = MessageKind.StartGame,
      uint id = 0,
      float x = 0.0f,
      float y = 0.0f) {
    builder.StartTable(4);
    SimplePackage.AddY(builder, y);
    SimplePackage.AddX(builder, x);
    SimplePackage.AddId(builder, id);
    SimplePackage.AddKind(builder, kind);
    return SimplePackage.EndSimplePackage(builder);
  }

  public static void StartSimplePackage(FlatBufferBuilder builder) { builder.StartTable(4); }
  public static void AddKind(FlatBufferBuilder builder, MessageKind kind) { builder.AddUshort(0, (ushort)kind, 0); }
  public static void AddId(FlatBufferBuilder builder, uint id) { builder.AddUint(1, id, 0); }
  public static void AddX(FlatBufferBuilder builder, float x) { builder.AddFloat(2, x, 0.0f); }
  public static void AddY(FlatBufferBuilder builder, float y) { builder.AddFloat(3, y, 0.0f); }
  public static Offset<SimplePackage> EndSimplePackage(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<SimplePackage>(o);
  }
};

