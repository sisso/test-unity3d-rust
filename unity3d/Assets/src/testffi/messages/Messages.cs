// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace messages
{

using global::System;
using global::FlatBuffers;

public struct Messages : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_11_1(); }
  public static Messages GetRootAsMessages(ByteBuffer _bb) { return GetRootAsMessages(_bb, new Messages()); }
  public static Messages GetRootAsMessages(ByteBuffer _bb, Messages obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Messages __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public messages.V2? Input(int j) { int o = __p.__offset(4); return o != 0 ? (messages.V2?)(new messages.V2()).__assign(__p.__vector(o) + j * 8, __p.bb) : null; }
  public int InputLength { get { int o = __p.__offset(4); return o != 0 ? __p.__vector_len(o) : 0; } }
  public messages.V2? Output(int j) { int o = __p.__offset(6); return o != 0 ? (messages.V2?)(new messages.V2()).__assign(__p.__vector(o) + j * 8, __p.bb) : null; }
  public int OutputLength { get { int o = __p.__offset(6); return o != 0 ? __p.__vector_len(o) : 0; } }

  public static Offset<messages.Messages> CreateMessages(FlatBufferBuilder builder,
      VectorOffset inputOffset = default(VectorOffset),
      VectorOffset outputOffset = default(VectorOffset)) {
    builder.StartTable(2);
    Messages.AddOutput(builder, outputOffset);
    Messages.AddInput(builder, inputOffset);
    return Messages.EndMessages(builder);
  }

  public static void StartMessages(FlatBufferBuilder builder) { builder.StartTable(2); }
  public static void AddInput(FlatBufferBuilder builder, VectorOffset inputOffset) { builder.AddOffset(0, inputOffset.Value, 0); }
  public static void StartInputVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 4); }
  public static void AddOutput(FlatBufferBuilder builder, VectorOffset outputOffset) { builder.AddOffset(1, outputOffset.Value, 0); }
  public static void StartOutputVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(8, numElems, 4); }
  public static Offset<messages.Messages> EndMessages(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<messages.Messages>(o);
  }
  public static void FinishMessagesBuffer(FlatBufferBuilder builder, Offset<messages.Messages> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedMessagesBuffer(FlatBufferBuilder builder, Offset<messages.Messages> offset) { builder.FinishSizePrefixed(offset.Value); }
};


}
